<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Owasp on rmauro.dev {blog}</title>
    <link>http://localhost:1313/tags/owasp/</link>
    <description>Recent content in Owasp on rmauro.dev {blog}</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Dec 2019 01:58:29 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/owasp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL Injection na Prática - Executando o Ataque</title>
      <link>http://localhost:1313/post/sql-injection-na-pratica/</link>
      <pubDate>Tue, 03 Dec 2019 01:58:29 +0000</pubDate>
      <guid>http://localhost:1313/post/sql-injection-na-pratica/</guid>
      <description>Primeiro, você sabe (ou lembra-se) o que é SQL Injection? (for english version)&#xA;Segundo OWASP.org (https://www.owasp.org/index.php/SQL_Injection).&#xA;A SQL injection attack consists of insertion or &amp;ldquo;injection&amp;rdquo; of a SQL query via the input data from the client to the application. A successful SQL injection exploit can read sensitive data from the database, modify database data.&#xA;Ou seja, é uma técnica de invasão de serviços web através de comandos SQL. Desde que o serviço web (website, webservice, REST API, etc) esteja sucetível ao ataque SQL Injection, você consegue executar comandos SQL não previstos no sistema.</description>
    </item>
  </channel>
</rss>
