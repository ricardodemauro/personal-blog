<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Storage on rmauro.dev {blog}</title>
    <link>http://localhost:1313/tags/storage/</link>
    <description>Recent content in Storage on rmauro.dev {blog}</description>
    <generator>Hugo -- 0.130.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2017 19:08:07 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Console Application para upload de arquivo no Azure Blob Storage</title>
      <link>http://localhost:1313/post/console-application-para-upload-de-arquivo-no-azure-blob-storage/</link>
      <pubDate>Tue, 10 Jan 2017 19:08:07 +0000</pubDate>
      <guid>http://localhost:1313/post/console-application-para-upload-de-arquivo-no-azure-blob-storage/</guid>
      <description>Projeto para
Configuration para utilizarmos como injeção de dependência.
namespace Demo.AzureBlob.Configurations { public class AzureBlobConfiguration { public bool AllowOverwrite { get; set; } public string ConnectionString { get; set; } public string ContainerName { get; set; } } } Configurando container de injeção de dependência.
namespace Demo.AzureBlob.DependencyInjection { public static class ServiceCollectionExtensions { public static IServiceCollection AddAzureBlobService(this IServiceCollection services, IConfiguration configuration) { return services.AddAzureBlobService(configuration, x =&amp;gt; { x.AllowOverwrite = configuration.GetValue&amp;lt;bool&amp;gt;(&amp;#34;Az:AllowOverwrite&amp;#34;); x.</description>
    </item>
  </channel>
</rss>
